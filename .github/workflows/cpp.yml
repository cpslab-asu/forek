name: C++ Workflow
on: push

env:
  BUILD_TYPE: "RELEASE"

jobs:
  clang-format:
    name: Clang Format
    runs-on: ubuntu-latest
    container: andersonjwan/clang-extra-tools:15.0.6
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run Clang Formatter Check
        run: find ./ -type f -iname *.cpp -or -iname *.hpp | xargs clang-format --Werror --dry-run --verbose --style=file
  clang-tidy:
    name: Clang Tidy
    runs-on: ubuntu-latest
    container: andersonjwan/devel:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Configure CMake Compile Commands
        run: cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -B build/
      - name: Run Clang Tidy Check
        run: find src/ -type f -iname *.cpp -or -iname *.hpp | xargs clang-tidy -p build --config-file=".clang-tidy"
  cppcheck:
    name: Cppcheck
    runs-on: ubuntu-latest
    container: andersonjwan/cppcheck:2.9
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run Cppcheck
        run: cppcheck --suppress="*:src/specification/*/gen/*" --enable=all --error-exitcode=2 --std=c++20 src/ include/
  build:
    name: Compile
    runs-on: ubuntu-latest
    container: andersonjwan/devel:latest
    needs: [clang-format, clang-tidy, cppcheck]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Configure & Generate Project Files
        run: cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -B build/
      - name: Build Project Files
        run: cmake --build build/ --config ${{env.BUILD_TYPE}}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build/
